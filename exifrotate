#!/usr/bin/env python

import subprocess
import sys
import os.path
import re
import tempfile

orientation_reg = re.compile('^Orientation: [0-9]+$')

if __name__ == '__main__' :
	if len(sys.argv) < 2 :
		print 'need files.'
		sys.exit(1)
	
	for fn in sys.argv[1:] :
		print 'process %s' % fn
		if not os.path.exists(fn) :
			print 'could not access %s' % fn
			sys.exit(1)
		etool = subprocess.Popen(['exiftool', '-n', '-S', '-Orientation', fn], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
		out, err = etool.communicate()
		if err :
			print 'exiftool failure for %s' % fn
			sys.exit(1)
		out = out.split('\n')[0]
		if out == '' :
			continue
		if not orientation_reg.match(out) :
			print 'exiftool unparsable output: %s for %s' % (out, fn)
			sys.exit(1)
		orient = int(out.split(':')[1])
		orients = {
			1 : 0,
			8 : 90,
			3 : 180,
			6 : 270
		}
		if orient not in orients :
			# see http://sylvana.net/jpegcrop/exif_orientation.html
			print 'EXIF Orientation %d unknown for %s' % (orient, fn)
			sys.exit(1)
		orient = orients[orient]
		print 'orientation is %d' % orient
		if orient == 0 :
			continue
		orient = '-' + str(orient)
		temp_file = tempfile.mktemp('.jpg')
		try :
			rotate = subprocess.Popen(['convert', '-rotate', orient, fn, temp_file], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
			out, err = rotate.communicate()
			if err :
				print 'conversion failure for %s' % fn
				sys.exit(1)

			strip_orient = subprocess.Popen(['exiftool', '-Orientation=', temp_file], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
			out, err = strip_orient.communicate()
			if err :
				print 'could not strip EXIF orientation for %s' % fn
				sys.exit(1)

			copy = subprocess.Popen(['cp', temp_file, fn], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
			out, err = copy.communicate()
			if err :
				print 'could not copy over original for %s' % fn
				sys.exit(1)
		finally :
			os.unlink(temp_file)
